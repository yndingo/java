Создайть новый проект, используя для сборки либо maven, либо gradle.

Добавьте в качестве зависимости проекта dummy-connector.jar. Напоминаю, что для того, чтобы иметь возможность получить эту зависимость из локального mvn-репозитория, вам нужно сделать maven install для этой библиотеки. 

Теперь вы можете использовать библиотеку, которую я подготовил. Эта библиотека приблизительно эмулирует поведение клиентской библиотеки ActiveMQ, позволяющей вам подключаться к очередям сообщений и отправлять и принимать из них сообщения.
Вы можете исследовать библиотеку самостоятельно, начиная с интерфейса Connection. 
Говоря просто, вам нужен объект типа Connection, чтобы создать объект типа Session, объект типа Session, чтобы создать объект типа Destination и, с его помощью – объект типа Producer. Producer умеет отправлять сообщения в очереди. Сообщения у нас – просто строки; на деле наш Producer просто выводит текст сообщения в консоль, никуда ничего не отправляет.
Вы можете посмотреть, как пользоваться настоящей библиотекой здесь: https://activemq.apache.org/hello-world. Моя, во-первых, конечно, не выполняет никаких функций, кроме вывода некоторой информации в консоль, а во-вторых, интерфейсы упрощены, но принцип работы такой же, выполните задание – с настоящей отправкой тоже справитесь.
Задания
 
1. Отправка сообщений из списка.

Приложение при запуске создаёт список сообщений “Раз”, “Два”, “Три”. Затем с использованием итератора проходит по списку и отправляет каждое из сообщений, выжидая по 2 секунды между отправкой.

Решение:
После импорта зависимости из src/main/resources/mq.dummy-1.0-SNAPSHOT.jar в локальный мавен репозиторий

java -jar HomeWork2-jar-with-dependencies.jar

Если Вам по какой либо причине понадобилась эта зависимость(mq.dummy-1.0-SNAPSHOT.JAR) прошу написать мне 